'''
给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。

示例 1：

输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]
输出：6
解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。
示例 2：

输入：height = [4,2,0,3,2,5]
输出：9
 

提示：

n == height.length
0 <= n <= 3 * 104
0 <= height[i] <= 105

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/trapping-rain-water
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''
def trap(height):
    '''
    1、暴力解法，计算每个位置，当前位置上方最多可以接多少雨水。
    因此只要知道当前位置 左右两侧最高的高度maxl, maxr，以及当前高度max(maxl, maxr) - height[i]
    依据当前坐标，往左右两边找最大值，O(n)，每个位置需要遍历一遍 O(n) -> n^2
    2、用两个数组记录每个位置左右两侧的最大位置值，直接查找就行，空间换时间 都为 O(n)
    3、双指针的思路，从两端开始往里，维护两个变量，记录左右两端最大的高度值。 -> 时间 O(n)

    :param height:
    :return:
    '''