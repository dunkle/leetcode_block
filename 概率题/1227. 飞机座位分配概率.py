'''
有 n 位乘客即将登机，飞机正好有 n 个座位。第一位乘客的票丢了，他随便选了一个座位坐下。

剩下的乘客将会：

如果他们自己的座位还空着，就坐到自己的座位上，

当他们自己的座位被占用时，随机选择其他座位
第 n 位乘客坐在自己的座位上的概率是多少？

 

示例 1：

输入：n = 1
输出：1.00000
解释：第一个人只会坐在自己的位置上。
示例 2：

输入: n = 2
输出: 0.50000
解释：在第一个人选好座位坐下后，第二个人坐在自己的座位上的概率是 0.5。
 

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/airplane-seat-assignment-probability
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''

class Solution:
    def nthPersonGetsNthSeat(self, n: int) -> float:
        '''
        解题思路：
        n个座位，1，2，3 ...n
        n个人，依次进场选座位。对n个位置进行重新排列，假设第一个进场的人对应1 号位，最后一个人对应最后一个n
        第一个人选择有三种：
        1、坐在自己的位置 1 号位， 概率为 1/n ，剩下的人无影响 坐在自己位置
        2、坐在最后一个人n的位置上，而 2，3，..n-1 个人依次进场，仍然坐在自己位置上无影响，但是最后一个人无法选择，
            只能坐在1位置上，因此概率为0
        3.坐在2，3...n-1 之间任意一个位置上，假设为位置i，那么在2，3，..i-1个位置时，都坐对了
          那么第i个人有 1， i, i+1,...n个位置选择。
          由此拆分成子问题：
            可以理解为第i个人的座位在1号位，转换一下思路
            若 第i个人 坐在第一个人位置上，那么 剩下的人 依次入座
            若 第i个人坐在第n个人的位置上，那么第n个座位被占，概率为0
            第i个人坐在 i+1 ，i+2，..n-1之间。由此重复

        公式递推：
        fn = 1/n + 1/n * sum(i(2->n-1)f(n-i+1))
        fn-1 = 1/(n-1) + 1/(n-1)* sum (i(2->n-2)f(n-i)

        ->nf(n)−(n−1)f(n−1)=f(n−1)
        f(n)=f(n−1)=⋯=f(2) = 0.5
        f(1) = 1

        :param n:
        :return:
        '''
        return 1 if n==1 else .5